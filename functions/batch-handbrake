#!/usr/bin/env bash

usage() {
    echo "$( basename $0 ): usage"
    echo "  -i --input      directory in which to scan"
    echo "  -x --extension   file extension for output"
    echo " "
    exit $1
}

#######################################
# Since the HandBrakeCLI does not create a symlink,
# nor does it provide an easily accessible $PATH,
# this is required to get the executable.
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   The executable's path
#######################################
get_handbrake_cli() {
    if hash HandBrakeCLI 2>/dev/null; then
        echo "HandBrakeCLI"
    elif [ -d "/usr/local/Cellar/handbrake" ]; then
        # Get latest install of HandBrakeCLI from HomeBrew
        echo "/usr/local/Cellar/handbrake/$( ls '/usr/local/Cellar/handbrake' | sort -n -t . -r | head -n 1 )/bin/HandBrakeCLI"
    else
        return 1
    fi
}

#######################################
# Convert files matching $input to $extension
# Globals:
#   None
# Arguments:
#   input
#   extension
# Returns:
#   None
#######################################
convert() {
    executable=$( get_handbrake_cli ) || { echo " "; echo "ERROR: HandBrakeCLI not found"; exit 1; }
    for f in $1; do
        output=${f%.*}.$2

        echo "Encoding $f into $output"

        $executable --input "$f" --encoder-preset Fast 1080p30 --output "$output"
    done
}

while [ "$1" != "" ]; do
    case $1 in
        -i | --input )      shift
                            input=$1
                            ;;
        -x | --ext )        shift
                            extension=$1
                            ;;
        -h | --help )       usage 0
                            ;;
        * )                 usage 1
    esac
    shift
done

[[ -z $input || -z $extension ]] && { usage 1; }

echo "About to encode these files:"
ls $input
echo "To $extension"
echo " "

read -r -p "Are you sure? [y/N] " response
case "$response" in
    [yY])   convert "$input" $extension
            ;;
    *)      exit 0
            ;;
esac
